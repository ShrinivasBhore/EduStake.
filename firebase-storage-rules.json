{
  "rules": {
    "storage": {
      "rules": "service firebase.storage {\n  match /b/{bucket}/o {\n    match /{allPaths=**} {\n      allow read, write: if false;\n    }\n\n    match /profilePictures/{userId}/{fileName} {\n      allow read: if request.auth != null;\n      allow write: if request.auth != null && request.auth.uid == userId &&\n                    request.resource.contentType.matches('image/.*') &&\n                    request.resource.size < 5 * 1024 * 1024;\n    }\n\n    match /messageAttachments/{channelId}/{messageId}/{fileName} {\n      allow read: if request.auth != null;\n      allow create: if request.auth != null &&\n                     request.resource.size < 20 * 1024 * 1024;\n      allow update, delete: if request.auth != null &&\n                             exists(/databases/$(database)/documents/messages/$(messageId)) &&\n                             get(/databases/$(database)/documents/messages/$(messageId)).data.userId == request.auth.uid;\n    }\n\n    match /resources/{resourceId}/{fileName} {\n      allow read: if request.auth != null;\n      allow create: if request.auth != null &&\n                     request.resource.size < 50 * 1024 * 1024 &&\n                     (\n                       request.resource.contentType.matches('application/pdf') ||\n                       request.resource.contentType.matches('application/msword') ||\n                       request.resource.contentType.matches('application/vnd.openxmlformats-officedocument.*') ||\n                       request.resource.contentType.matches('image/.*') ||\n                       request.resource.contentType.matches('video/.*')\n                     );\n      allow update, delete: if request.auth != null &&\n                             exists(/databases/$(database)/documents/resources/$(resourceId)) &&\n                             get(/databases/$(database)/documents/resources/$(resourceId)).data.userId == request.auth.uid;\n    }\n\n    match /communities/{communityId}/{fileName} {\n      allow read: if request.auth != null;\n      allow write: if request.auth != null &&\n                    exists(/databases/$(database)/documents/communities/$(communityId)) &&\n                    get(/databases/$(database)/documents/communities/$(communityId)).data.members[request.auth.uid].role == \"admin\" &&\n                    request.resource.contentType.matches('image/.*') &&\n                    request.resource.size < 5 * 1024 * 1024;\n    }\n\n    match /temp/{userId}/{fileName} {\n      allow read, write: if request.auth != null && request.auth.uid == userId;\n    }\n  }\n}"
    }
  }
}
